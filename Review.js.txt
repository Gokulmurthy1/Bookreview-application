// models/Review.js
const mongoose = require('mongoose');

const reviewSchema = new mongoose.Schema({
  bookId: { type: mongoose.Schema.Types.ObjectId, ref: 'Book', required: true },
  rating: { type: Number, required: true, min: 1, max: 5 },
  comment: String,
  createdAt: { type: Date, default: Date.now },
  updatedAt: { type: Date, default: Date.now },
});

module.exports = mongoose.model('Review', reviewSchema);


//

// routes/reviews.js
const express = require('express');
const router = express.Router();
const Review = require('../models/Review');

// Submit User Review
router.post('/api/reviews', async (req, res) => {
  const { bookId, rating, comment } = req.body;
  
  // Server-side validation
  if (!bookId || !rating || !comment) {
    return res.status(400).json({ message: 'All fields are required' });
  }
  if (isNaN(rating) || rating < 1 || rating > 5) {
    return res.status(400).json({ message: 'Invalid rating' });
  }

  try {
    const review = new Review({ bookId, rating, comment });
    await review.save();
    res.status(201).json(review);
  } catch (error) {
    console.error('Error submitting review:', error);
    res.status(500).json({ message: 'Server Error' });
  }
});

module.exports = router;